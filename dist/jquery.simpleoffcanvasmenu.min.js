/*! Simple Off Canvas Menu - v0.2.0 - 2014-12-13
* https://github.com/SubZane/simpleoffcanvasmenu
* Copyright (c) 2014 Andreas Norman; Licensed MIT */
!function(a){function b(b,d){function e(){kitUtils.init(),a(".socm-content").css("height",t),a(".socm-left").css("height",t),a(".socm-right").css("height",t),a(".socm-overlay").css("height",t),n(),q("onInit")}function f(){s.removeClass("openleft"),s.removeClass("openright"),m(),l()}function g(){q("onCloseLeft")}function h(){q("onCloseRight")}function i(){q("onOpenLeft")}function j(){q("onOpenRight")}function k(){a(".socm-content").on("click touchmove touchend touchleave touchcancel",function(a){f(),a.preventDefault()}),q("onOpen")}function l(){a(".socm-content").off("click touchmove touchend touchleave touchcancel"),q("onClose")}function m(){a("body").toggleClass("socm-open"),a("html").toggleClass("socm-open")}function n(){a(".socm-button-left").on("click",function(){s.toggleClass("openleft"),m(),a(this).hasClass("openleft")?(g(),l()):(i(),k())}),a(".socm-button-right").on("click",function(){s.toggleClass("openright"),m(),a(this).hasClass("openright")?(h(),l()):(j(),k())}),a(window).bind("orientationchange",function(){a(".socm-content").css("height",t),a(".socm-left").css("height",t),a(".socm-right").css("height",t),a(".socm-overlay").css("height",t)}),q("onLoad")}function o(a,b){return b?void(d[a]=b):d[a]}function p(){s.each(function(){var b=a(this);q("onDestroy"),b.removeData("plugin_"+c)})}function q(a){void 0!==d[a]&&d[a].call(r)}var r=b,s=a(b),t=window.innerHeight;return d=a.extend({},a.fn[c].defaults,d),e(),{option:o,destroy:p}}var c="simpleoffcanvasmenu";a.fn[c]=function(d){if("string"==typeof arguments[0]){var e,f=arguments[0],g=Array.prototype.slice.call(arguments,1);return this.each(function(){if(!a.data(this,"plugin_"+c)||"function"!=typeof a.data(this,"plugin_"+c)[f])throw new Error("Method "+f+" does not exist on jQuery."+c);e=a.data(this,"plugin_"+c)[f].apply(this,g)}),void 0!==e?e:this}return"object"!=typeof d&&d?void 0:this.each(function(){a.data(this,"plugin_"+c)||a.data(this,"plugin_"+c,new b(this,d))})},a.fn[c].defaults={onInit:function(){},onLoad:function(){},onOpenLeft:function(){},onOpenRight:function(){},onCloseLeft:function(){},onCloseRight:function(){},onDestroy:function(){}}}(jQuery);