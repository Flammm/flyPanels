/*! Simple Off Canvas Menu - v0.2.0 - 2014-12-13
* https://github.com/SubZane/simpleoffcanvasmenu
* Copyright (c) 2014 Andreas Norman; Licensed MIT */
!function(a){function b(b,d){function e(){kitUtils.init(),l(),o("onInit")}function f(){q.removeClass("openleft"),q.removeClass("openright")}function g(){o("onCloseLeft"),a(".socm-left").css("height","")}function h(){o("onCloseRight"),a(".socm-right").css("height","")}function i(){o("onOpenLeft"),a(".socm-left").css("height",r)}function j(){o("onOpenRight"),a(".socm-right").css("height",r)}function k(){a("body").toggleClass("socm-open"),a("html").toggleClass("socm-open")}function l(){a(".socm-content").css("height",r),a(".socm-button-left").on("click",function(){q.toggleClass("openleft"),k(),a(this).hasClass("openleft")?g():i()}),a(".socm-button-right").on("click",function(){q.toggleClass("openright"),k(),a(this).hasClass("openright")?h():j()}),a(window).bind("orientationchange",function(){}),a(".socm-content").on("click",function(a){f(),a.preventDefault()}),a(".socm-content").on("touchmove",function(a){f(),a.preventDefault()}),a(".socm-content").on("touchend",function(a){f(),a.preventDefault()}),a(".socm-content").on("touchleave",function(a){f(),a.preventDefault()}),a(".socm-content").on("touchcancel",function(a){f(),a.preventDefault()}),o("onLoad")}function m(a,b){return b?void(d[a]=b):d[a]}function n(){q.each(function(){var b=a(this);o("onDestroy"),b.removeData("plugin_"+c)})}function o(a){void 0!==d[a]&&d[a].call(p)}var p=b,q=a(b),r=window.innerHeight;return d=a.extend({},a.fn[c].defaults,d),e(),{option:m,destroy:n}}var c="simpleoffcanvasmenu";a.fn[c]=function(d){if("string"==typeof arguments[0]){var e,f=arguments[0],g=Array.prototype.slice.call(arguments,1);return this.each(function(){if(!a.data(this,"plugin_"+c)||"function"!=typeof a.data(this,"plugin_"+c)[f])throw new Error("Method "+f+" does not exist on jQuery."+c);e=a.data(this,"plugin_"+c)[f].apply(this,g)}),void 0!==e?e:this}return"object"!=typeof d&&d?void 0:this.each(function(){a.data(this,"plugin_"+c)||a.data(this,"plugin_"+c,new b(this,d))})},a.fn[c].defaults={onInit:function(){},onLoad:function(){},onOpenLeft:function(){},onOpenRight:function(){},onCloseLeft:function(){},onCloseRight:function(){},onDestroy:function(){}}}(jQuery);